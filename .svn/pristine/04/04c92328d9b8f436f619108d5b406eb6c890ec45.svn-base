//
//  ZPLiveTVViewController.m
//  Z8Player
//
//  Created by Khanhhoa Mai on 8/11/14.
//  Copyright (c) 2014 FSOFT. All rights reserved.
//

#import "ZPLiveTVViewController.h"
#import <QuartzCore/QuartzCore.h>
#import "UITableViewCell+FlatUI.h"
#import "UIColor+FlatUI.h"
#import "FUISegmentedControl.h"
#import "UIFont+FlatUI.h"
#import "LibraryAPI.h"
#import "ChannelModel.h"
//#import "AsyncImageView.h"
#import "UIImageView+AFNetworking.h"
#import "ZPDetailViewController.h"

#define kHeaderColor [UIColor colorWithRed:193.0f/255.0f green:255.0f/255.0f blue:193.0f/255.0f alpha:1]
@interface ZPLiveTVViewController ()
@property (nonatomic,strong) UITableView *nowShowingTableView;
@property (strong, nonatomic) IBOutlet FUISegmentedControl *segmentCtrl;
@property (nonatomic,strong) UICollectionView *channelList;

@end

@implementation ZPLiveTVViewController
@synthesize channelArr;
static NSString * const FUITableViewControllerCellReuseIdentifier = @"FUITableViewControllerCellReuseIdentifier";

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
        
    }
    return self;
}

- (void)loadView
{
    [super loadView];
    
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    [self prepareData];
    [self loadNowShowingList];
    //[self loadChannelList];
    // Do any additional setup after loading the view from its nib.
    [self setTitle:@"Live TV"];
    
    self.optionIndices = [NSMutableIndexSet indexSetWithIndex:1];
}

-(void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    
}
-(void)loadNowShowingList
{
    _nowShowingTableView = [[UITableView alloc]initWithFrame:CGRectMake(self.view.bounds.origin.x+11, self.view.bounds.origin.y, self.view.bounds.size.width - 22, self.view.bounds.size.height - 88.0)style:UITableViewStyleGrouped];
    _nowShowingTableView.delegate = self;
    _nowShowingTableView.dataSource = self;
    [_nowShowingTableView setScrollEnabled:YES];
    CATransition *transition = [CATransition animation];
    transition.duration = 2.0;
    transition.type = kCATransitionReveal; //choose your animation
    [_nowShowingTableView.layer addAnimation:transition forKey:nil];
    [self.view addSubview:_nowShowingTableView];
    [_nowShowingTableView registerClass:[UITableViewCell class] forCellReuseIdentifier:FUITableViewControllerCellReuseIdentifier];
    [_nowShowingTableView setSeparatorColor:[UIColor cloudsColor]];
    [_nowShowingTableView setBackgroundView:nil];
    [_nowShowingTableView setBackgroundColor:[UIColor clearColor]];
    [_nowShowingTableView setShowsVerticalScrollIndicator:NO];
}

- (void)prepareData
{
    channelArr = [NSMutableArray arrayWithArray:[[LibraryAPI sharedInstance]getChannelList]];
}

-(void)loadChannelList
{
    UICollectionViewFlowLayout *flowLayout = [[UICollectionViewFlowLayout alloc]init];
    [flowLayout setScrollDirection:UICollectionViewScrollDirectionVertical];
    [flowLayout setItemSize:CGSizeMake(70.0, 50.0)];
    [flowLayout setSectionInset:UIEdgeInsetsMake(7, 5, 2.5, 5)];
    
    _channelList = [[UICollectionView alloc]initWithFrame:CGRectMake(self.view.bounds.origin.x + 11, self.view.bounds.origin.y, self.view.bounds.size.width - 22, self.view.bounds.size.height - 88.0) collectionViewLayout:flowLayout ];
    [_channelList setBackgroundColor:[UIColor clearColor]];
    [_channelList registerNib:[UINib nibWithNibName:@"cCellIdentifier" bundle:nil] forCellWithReuseIdentifier:@"cCellIdentifier"];
    _channelList.delegate = self;
    _channelList.dataSource = self;
    [_channelList setNeedsLayout];
    [_channelList registerClass:[UICollectionViewCell class] forCellWithReuseIdentifier:@"cCellIdentifier"];
    [_channelList registerClass:[UICollectionReusableView class] forSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"collectionCellHeader"];
    [_channelList setAllowsMultipleSelection:NO];
    [_channelList setShowsVerticalScrollIndicator:NO];
    CATransition *transition = [CATransition animation];
    transition.duration = 2.0;
    transition.type = kCATransitionReveal; //choose your animation
    [_channelList.layer addAnimation:transition forKey:nil];
    [_channelList setBounces:YES];
    
    [self.view addSubview:_channelList];
    
}
- (void)viewWillLayoutSubviews
{
    [super viewWillLayoutSubviews];
    [self.channelList.collectionViewLayout invalidateLayout];
}
-(void)addUnderSeparator : (UIView *)targetView
{
    CGRect separatorFrame = CGRectMake(0, targetView.frame.size.height - 1, targetView.frame.size.width, 1);
    UIView *separatorView = [[UIView alloc]initWithFrame:separatorFrame];
    [separatorView setBackgroundColor:[UIColor tangerineColor]];
    [targetView addSubview:separatorView];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


#pragma mark - UITableViewDataSource

-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [channelArr count];
}

#pragma mark - UITableViewDelegate

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UIRectCorner corner = 0;
    if (tableView.style == UITableViewStyleGrouped) {
        if ([tableView numberOfRowsInSection:indexPath.section] == 1) {
            corner = UIRectCornerAllCorners;
        }else if (indexPath.row == 0){
            corner = UIRectCornerTopLeft | UIRectCornerTopRight;
        }else if (indexPath.row == [tableView numberOfRowsInSection:indexPath.section] - 1){
            corner = UIRectCornerBottomLeft | UIRectCornerBottomRight;
        }
    }

   // static NSString *cellIdentifier = @"CellIdentifier";
    UITableViewCell *cell = [self.nowShowingTableView dequeueReusableCellWithIdentifier:FUITableViewControllerCellReuseIdentifier];
    
    if (cell == nil) {
        cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:FUITableViewControllerCellReuseIdentifier];
    }
    [cell configureFlatCellWithColor:[UIColor whiteColor] selectedColor:[UIColor groupTableViewBackgroundColor] roundingCorners:corner];
    [cell setCornerRadius:5.f];
    if (self.nowShowingTableView.style == UITableViewStyleGrouped) {
        [cell setSeparatorHeight:2.f];
    }else{
        [cell setSeparatorHeight:0.];
    }
    
    ChannelModel *channel = channelArr[indexPath.row];
    [cell.textLabel setText:channel.mediaName];
    [cell.textLabel setTextColor:[UIColor emerlandColor]];
    //[cell.imageView setImageURL:[NSURL URLWithString:channel.mediaThumbnailImage]];
    [cell.imageView setImageWithURL:[NSURL URLWithString:channel.mediaThumbnailImage] placeholderImage:[UIImage imageNamed:@"LogoFSO(2).png"]];
    return cell;
}

//-(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
//{
//    static NSString *headerCellIdentifier = @"HeaderCellIdentifier";
//    
//    UITableViewCell *headerCell = [tableView dequeueReusableCellWithIdentifier:headerCellIdentifier];
//    
//    if (headerCell == nil) {
//        headerCell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:headerCellIdentifier];
//    }
//    
//    [headerCell.textLabel setText:[NSString stringWithFormat:@"Section %i",section]];
//    [headerCell setAccessoryType:UITableViewCellAccessoryDisclosureIndicator];
//    [headerCell setBackgroundColor:[UIColor whiteColor]];
//    [headerCell.textLabel setTextColor:[UIColor tangerineColor]];
//    [self addUnderSeparator:headerCell];
//    return  headerCell;
//}

-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return 44.0f;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 60;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    ChannelModel *channel = channelArr[indexPath.row];
    ZPDetailViewController *detailVC = [[ZPDetailViewController alloc]initWithNibName:@"ZPDetailViewController" bundle:nil withURLString:channel.mediaURL];
    [self.navigationController pushViewController:detailVC animated:YES];
}

#pragma mark - UICollectionDataSource

-(NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView
{
    return 1;
}
-(NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    return [channelArr count];
}
#pragma mark - UICollectionViewDelegate

-(UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *cCellIdentifier = @"cCellIdentifier";
    
    UICollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:cCellIdentifier forIndexPath:indexPath];
    
    if (cell == nil) {
        cell = [[UICollectionViewCell alloc]init];
    }
    // image size is 70 x 50
    ChannelModel *channel = channelArr[indexPath.row];
    UIImageView *channelImg = [[UIImageView alloc]init];
    [channelImg setImageWithURL:[NSURL URLWithString:channel.mediaThumbnailImage] placeholderImage:[UIImage imageNamed:@"LogoFSO(2).png"]];
    [cell addSubview: channelImg];
    
   // [cell setBackgroundColor:[UIColor redColor]];
    return cell;
}

-(UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath
{
    UICollectionReusableView *resuableView = nil;
    if (kind == UICollectionElementKindSectionHeader) {
       // UICollectionReusableView *header  = [collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:nil forIndexPath:indexPath];
        resuableView = [collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"collectionCellHeader" forIndexPath:indexPath];
        if (resuableView == nil) {
            resuableView = [[UICollectionReusableView alloc]initWithFrame:CGRectMake(10, 0, 320, 44)];
            
        }
        
        UILabel *headerLbl = [[UILabel alloc]initWithFrame:CGRectMake(0, 0, 320, 44)];
        [headerLbl setText:[NSString stringWithFormat:@"section %i",indexPath.section]];
        [headerLbl setTextAlignment:NSTextAlignmentCenter];
        [headerLbl setTextColor:[UIColor tangerineColor]];
        [resuableView addSubview:headerLbl];
        [self addUnderSeparator:resuableView];
        return resuableView;
    }
    return nil;
}
#pragma mark - UICollectionViewFlowLayout

-(CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout referenceSizeForHeaderInSection:(NSInteger)section
{
    return CGSizeMake(0, 44.0f);
}

#pragma mark - UISegmentControl
- (IBAction)didChangeSegment:(id)sender {
    
    if (_segmentCtrl.selectedSegmentIndex == 0) {
        [_channelList removeFromSuperview];
        [self loadNowShowingList];
    }else if (_segmentCtrl.selectedSegmentIndex == 1) {
        [_nowShowingTableView removeFromSuperview];
        [self loadChannelList];
    }
}


@end
