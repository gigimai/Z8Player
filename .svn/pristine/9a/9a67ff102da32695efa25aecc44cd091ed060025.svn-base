//
//  HomeViewController.m
//  Z8Player
//
//  Created by HieuSE on 8/13/14.
//  Copyright (c) 2014 FSOFT. All rights reserved.
//

#import "ZPHomeViewController.h"
#import "KASlideShow.h"
#import "UIFont+FlatUI.h"


@interface ZPHomeViewController ()<KASlideShowDelegate,KASlideShowDataSource>{
    CGFloat dummyViewHeight;
//    UIImageView *topImage;
    

}
@property (strong,nonatomic) KASlideShow * slideshow;

@end

@implementation ZPHomeViewController
@synthesize theTableView;
@synthesize dataArr;
@synthesize chanelsArr;
@synthesize filmsArr;
- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self)
    {
        self.title = NSLocalizedString(@"Z8 Play", @"Z8 Play");
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    
    [self preperaData];
    
    // Register the table cell
    [self.theTableView registerClass:[ORGContainerCell class] forCellReuseIdentifier:@"ORGContainerCell"];
    
    // Add observer that will allow the nested collection cell to trigger the view controller select row at index path
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(didSelectItemFromCollectionView:) name:@"didSelectItemFromCollectionView" object:nil];
    [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(didTapSlideShow:) name:@"didTapSlideShow" object:nil];
    [self.theTableView setFrame:CGRectMake(0, self.view.frame.origin.y, self.view.frame.size.width, self.view.frame.size.height)];
    self.theTableView.delegate = self;
    self.theTableView.dataSource = self;
    
    self.optionIndices = [NSMutableIndexSet indexSetWithIndex:0];
    

    [self.theTableView setShowsVerticalScrollIndicator:NO];
    
  //  topImage = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 320, 170)];
  //  [topImage setImage:[UIImage imageNamed:@"guardians_poster_via_marvel.jpg"]];
    
    
}

-(void)viewDidDisappear:(BOOL)animated
{
    NSLog(@"exit home");
    [_slideshow stop];
}

-(void)viewWillAppear:(BOOL)animated
{
    [theTableView reloadData];
}

- (void)preperaData
{
    self.linkChannelArr = [[NSMutableArray alloc]init];
    self.linkFilmArr = [[NSMutableArray alloc]init];
    if (!chanelsArr) {
       // chanelsArr = [[LibraryAPI sharedInstance]getChannelList];
        chanelsArr = [NSMutableArray arrayWithArray:[[LibraryAPI sharedInstance]getChannelList]];
    }
    
    NSMutableArray *channelsDict = [[NSMutableArray alloc]init];
//    for (int i = 0; i < 5; i++) {
//        ChannelModel *channel = chanelsArr[i];
//        NSDictionary *channelDict = @{@"title": channel.mediaName,
//                                      @"imageURL": channel.mediaThumbnailImage,
//                                      @"linkPlay": channel.mediaURL};
//        [channelsDict addObject:channelDict];
//    }
//    for (ChannelModel *channel in chanelsArr) {
//        NSDictionary *channelDict = @{@"ID": [NSNumber numberWithInt:channel.channelID],
//                                      @"title": channel.mediaName,
//                                      @"imageURL": channel.mediaThumbnailImage,
//@"linkPlay": channel.mediaURL,
//                                      @"category": @"Channel"};
//        [self.linkC                                      hannelArr addObject:[NSString stringWithFormat:@"%@",channel.mediaURL]];
//        [channelsDict addObject:channelDict];
//    }
    for (int i = 0; i < [chanelsArr count]; i++) {
        ChannelModel *channel = chanelsArr[i];
        NSDictionary *channelDict = @{@"ID": [NSNumber numberWithInt:channel.channelID],
                                      @"title": channel.mediaName,
                                      @"imageURL": channel.mediaThumbnailImage,
                                      @"linkPlay": channel.mediaURL,
                                      @"channelCountry": channel.channelCountry,
                                      @"category": @"Channel",
                                      @"index":[NSNumber numberWithInt:i]};
        [self.linkChannelArr addObject:[NSString stringWithFormat:@"%@",channel.mediaURL]];
        [channelsDict addObject:channelDict];
    }
    NSDictionary *channelsViewDict = @{@"description":@"Most viewed channels",
                                       @"articles":channelsDict};
    if (!filmsArr) {
        //filmsArr = [[LibraryAPI sharedInstance]getFilmList];
        filmsArr = [NSMutableArray arrayWithArray:[[LibraryAPI sharedInstance]getFilmList]];
    }
    
    NSMutableArray *filmsDict = [[NSMutableArray alloc]init];
//    for (FilmModel *film in filmsArr) {
//        NSDictionary *filmlDict = @{@"ID":[NSNumber numberWithInt:film.filmID],
//                                    @"title": film.mediaName,
//                                    @"imageURL": film.mediaThumbnailImage,
//                                    @"linkPlay" : film.mediaURL,
//                                    @"category": @"Film"};
//        [self.linkFilmArr addObject:[NSString stringWithFormat:@"%@",film.mediaURL]];
//        [filmsDict addObject:filmlDict];
//    }
    for (int i = 0; i < [filmsArr count]; i++) {
        FilmModel *film = filmsArr[i];
        NSDictionary *filmlDict = @{@"ID":[NSNumber numberWithInt:film.filmID],
                                    @"title": film.mediaName,
                                    @"imageURL": film.mediaThumbnailImage,
                                    @"linkPlay" : film.mediaURL,
                                    @"filmDescription":film.filmDescription,
                                    @"category": @"Film",
                                    @"index":[NSNumber numberWithInt:i]};
        [self.linkFilmArr addObject:[NSString stringWithFormat:@"%@",film.mediaURL]];
        [filmsDict addObject:filmlDict];
    }
    NSDictionary *filmsViewDict = @{@"description":@"Most viewed movies",
                                    @"articles":filmsDict};
    
    dataArr = [[NSArray alloc]initWithObjects:channelsViewDict,filmsViewDict, nil];
    
    [self.theTableView reloadData];
}


#pragma mark- UITableViewMethod

-(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return 1;
}


- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    if (section == 0) {
        dummyViewHeight = 214;
        return 214;
    }
    dummyViewHeight = 44;
    return 44.0;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section == 0) {
        return 180;
    }
    return 180.0;
}



- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return [dataArr count];
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return 1;
}

// Customize the appearance of table view cells.
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *cellIdentifier = @"ORGContainerCell";
    ORGContainerCell *cell = [tableView dequeueReusableCellWithIdentifier:cellIdentifier];
    if (!cell) {
        cell = [[ORGContainerCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellIdentifier];
    }
    NSDictionary *cellData = dataArr[indexPath.section];
    NSArray *articleData = [cellData objectForKey:@"articles"];
    [cell setCollectionData:articleData];
    return cell;
}

-(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    UIView *headerView;
    UILabel *myLbl;
    NSDictionary *sectionData = dataArr[section];
    NSString *header = [sectionData objectForKey:@"description"];
    
    if (section == 0) {
        headerView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 320, 214)];
        _slideshow = [[KASlideShow alloc]initWithFrame:CGRectMake(headerView.frame.origin.x, headerView.frame.origin.y , 320, 170)];
        _slideshow.delegate = self;
        // Delay between transitions
        [_slideshow setDelay:3];
        // Transition duration
        [_slideshow setTransitionDuration:1.];
        // Choose a transition type (fade or slide)
        [_slideshow setTransitionType:KASlideShowTransitionSlide];
        // Choose a content mode for images to display
        [_slideshow setImagesContentMode:UIViewContentModeScaleAspectFill];
        // Add images from resources
        [_slideshow addImagesFromResources:@[@"guardians_poster_via_marvel.jpg",@"TheExpendables3.png",@"how_to_train_your_dragon_2.png"]];

        [_slideshow start];
        [_slideshow addGesture:KASlideShowGestureTap];
        [_slideshow addGesture:KASlideShowGestureSwipe];
                [headerView addSubview:_slideshow];
        myLbl = [[UILabel alloc]initWithFrame:CGRectMake(headerView.frame.origin.x + 10, headerView.frame.origin.y +_slideshow.frame.size.height, 320, 44)];
       
    }else{
        headerView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 320, 44)];
        myLbl = [[UILabel alloc]initWithFrame:CGRectMake(headerView.frame.origin.x + 10, headerView.frame.origin.y, 320, 44)];
        
    }

    [myLbl setText:header];
    [myLbl setTextColor:[UIColor turquoiseColor]];
    [myLbl setFont:[UIFont boldFlatFontOfSize:17.0f]];
    [headerView addSubview:myLbl];
    [headerView setBackgroundColor:[UIColor whiteColor]];
    

    return  headerView;
}

-(UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section
{
    if (section == 0) {
    UIView *lowerHorizontalDivider = [[UIView alloc]init];
    [lowerHorizontalDivider setBackgroundColor:[UIColor silverColor]];
    return lowerHorizontalDivider;
    }
    return nil;
}
- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath
{
    // Return NO if you do not want the specified item to be editable.
    return NO;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    // This code is commented out in order to allow users to click on the collection view cells.
    //    if (!self.detailViewController) {
    //        self.detailViewController = [[ORGDetailViewController alloc] initWithNibName:@"ORGDetailViewController" bundle:nil];
    //    }
    //  //  NSDate *object = _objects[indexPath.row];
    //   // self.detailViewController.detailItem = object;
    //    [self.navigationController pushViewController:self.detailViewController animated:YES];
}


#pragma mark - KASlideShow delegate

- (void) kaSlideShowDidNext:(KASlideShow *)slideShow
{
    NSLog(@"kaSlideShowDidNext, index : %lu",(unsigned long)slideShow.currentIndex);
}

-(void)kaSlideShowDidPrevious:(KASlideShow *)slideShow
{
    NSLog(@"kaSlideShowDidPrevious, index : %lu",(unsigned long)slideShow.currentIndex);
}

#pragma mark - NSNotification to select table cell

- (void) didSelectItemFromCollectionView:(NSNotification *)notification
{
    NSDictionary *cellData = [notification object];
    if (cellData)
    {
        int index = 0;
        if ([[cellData objectForKey:@"category"] isEqualToString:@"Film"]) {
//            FilmModel *film = [[FilmModel alloc]init];
//            film.filmID = [[cellData objectForKey:@"ID"]intValue];
//            film.mediaName = [cellData objectForKey:@"title"];
//            film.mediaThumbnailImage = [cellData objectForKey:@"imageURL"];
//            film.mediaURL = [cellData objectForKey:@"linkPlay"];
            index = [[cellData objectForKey:@"index"]intValue];
            if (self.detailViewController){
                NSLog(@"Leak memory in did selected film");
            }
            
            //self.detailViewController = [[ZPDetailViewController alloc]initWithNibName:@"ZPDetailViewController" bundle:nil withLinkArrs:self.filmsArr andLink:[cellData objectForKey:@"linkPlay"]];
            self.detailViewController = [[ZPDetailViewController alloc]initWithNibName:@"ZPDetailViewController" bundle:nil withFilmArrs:self.filmsArr andFilm:self.filmsArr[index]];
            
        } else{
//            ChannelModel *channel = [[ChannelModel alloc]init];
//            channel.channelID = [[cellData objectForKey:@"ID"]intValue];
//            channel.mediaName = [cellData objectForKey:@"title"];
//            channel.mediaThumbnailImage = [cellData objectForKey:@"imageURL"];
//            channel.mediaURL = [cellData objectForKey:@"linkPlay"];
            
            //self.detailViewController = [[ZPDetailViewController alloc]initWithNibName:@"ZPDetailViewController" bundle:nil withLinkArrs:self.chanelsArr andLink:[cellData objectForKey:@"linkPlay"]];
            index = [[cellData objectForKey:@"index"]intValue];
            if (self.detailViewController){
                NSLog(@"Leak memory in did selected chanel");
            }
            self.detailViewController = [[ZPDetailViewController alloc]initWithNibName:@"ZPDetailViewController" bundle:nil withChannelArrs:self.chanelsArr andChannel:self.chanelsArr[index]];
        }
        //self.detailViewController = [[ZPDetailViewController alloc]initWithNibName:@"ZPDetailViewController" bundle:nil withURLString:[[cellData objectForKey:@"linkPlay"] absoluteString]];
//        CATransition *animation = [CATransition animation];
//        [animation setDelegate:self];
//        [animation setType:kCATransitionPush];
//        [animation setSubtype:kCATransitionFromRight];
//        [animation setDuration:0.3f];
//        [animation setTimingFunction:[CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseInEaseOut]];
        // [AppDelegate  .window.layer addAnimation:animation forKey:@"pushIn"];
        //[[UIApplication sharedApplication] delegate].w;
        [self.navigationController pushViewController:self.detailViewController animated:YES];
        self.detailViewController = nil;
    }
}

- (void)dealloc
{
    [[NSNotificationCenter defaultCenter] removeObserver:self name:@"didSelectItemFromCollectionView" object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:@"didTapSlideShow" object:nil];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

-(void)didTapSlideShow : (NSNotification *)notification
{
    FilmModel *model1 = [FilmModel new];
    FilmModel *model2 = [FilmModel new];
    FilmModel *model3 = [FilmModel new];
    model1.mediaURL = @"http://10.88.106.248/film/GUARDIANS.mp4";
    model2.mediaURL = @"http://10.88.106.248/film/The_Expendables_3.mp4";
    model3.mediaURL = @"http://10.88.106.248/film/howtotraindragon.mp4";
    
    model1.mediaName =@"Guardians of The Galaxy _trailer";
    model2.mediaName =@"The Expendables 3 _trailer";
    model3.mediaName = @"How To Train Dragon 2 _trailer";
    
    [model1 setFilmDescription: @"Light years from Earth, 26 years after being abducted, Peter Quill finds himself the prime target of a manhunt after discovering an orb wanted by Ronan the Accuser."];
    [model2 setFilmDescription:@"Barney augments his team with new blood for a personal battle: to take down Conrad Stonebanks, the Expendables co-founder and notorious arms trader who is hell bent on wiping out Barney and every single one of his associates."];
    [model3 setFilmDescription:@"When Hiccup and Toothless discover an ice cave that is home to hundreds of new wild dragons and the mysterious Dragon Rider, the two friends find themselves at the center of a battle to protect the peace."];
    NSMutableArray *arrayofFilm = [NSMutableArray arrayWithObjects:
                                   model1,
                                   model2,
                                   model3,
                                   nil];
    KASlideShow *slideShow = [notification object];
    if (slideShow)
    {
        
            //self.detailViewController = [[ZPDetailViewController alloc]initWithNibName:@"ZPDetailViewController" bundle:nil];
            NSLog(@"current slideShow: %d", slideShow.currentIndex);
            NSLog(@"current slideShow1: %d", self.slideshow.currentIndex);
            self.detailViewController = [[ZPDetailViewController alloc] initWithNibName:@"ZPDetailViewController" bundle:nil withFilmArrs:arrayofFilm andFilm:arrayofFilm[self.slideshow.currentIndex]];
                                         
                                         //initWithNibName:@"ZPDetailViewController" bundle:nil withLinkArrs:arrayofFilm andLink:arrayofFilm[self.slideshow.currentIndex]];
        
        [self.navigationController pushViewController:self.detailViewController animated:YES];
        self.detailViewController = nil;
    }
}
-(UIImage *)slideShow:(KASlideShow *)slideShow imageForPosition:(KASlideShowPosition)position{
    return nil;
}
@end
