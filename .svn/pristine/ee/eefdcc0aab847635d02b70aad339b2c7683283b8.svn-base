//
//  ZPLiveTVViewController.m
//  Z8Player
//
//  Created by Khanhhoa Mai on 8/11/14.
//  Copyright (c) 2014 FSOFT. All rights reserved.
//

#import "ZPLiveTVViewController.h"
#import <QuartzCore/QuartzCore.h>
#import "UITableViewCell+FlatUI.h"
#import "UIColor+FlatUI.h"
#import "FUISegmentedControl.h"
#import "UIFont+FlatUI.h"
#import "LibraryAPI.h"
#import "ChannelModel.h"
//#import "AsyncImageView.h"
#import "UIImageView+AFNetworking.h"
#import "ZPDetailViewController.h"

#define kHeaderColor [UIColor colorWithRed:193.0f/255.0f green:255.0f/255.0f blue:193.0f/255.0f alpha:1]
@interface ZPLiveTVViewController ()
@property (nonatomic,strong) UITableView *nowShowingTableView;
@property (strong, nonatomic) IBOutlet FUISegmentedControl *segmentCtrl;
@property (nonatomic,strong) UICollectionView *channelList;

@end

@implementation ZPLiveTVViewController
@synthesize channelArr;
@synthesize linkArr;
static NSString * const TableViewControllerCellReuseIdentifier = @"TableViewControllerCellReuseIdentifier";

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
        
    }
    return self;
}

- (void)loadView
{
    [super loadView];
    
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    [self prepareData];
    [self loadNowShowingList];
    //[self loadChannelList];
    // Do any additional setup after loading the view from its nib.
    [self setTitle:@"Live TV"];
    
    self.optionIndices = [NSMutableIndexSet indexSetWithIndex:1];
}

-(void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    
}
-(void)loadNowShowingList
{
    _nowShowingTableView = [[UITableView alloc]initWithFrame:CGRectMake(self.view.bounds.origin.x, 0, self.view.bounds.size.width - 22, self.view.bounds.size.height - 88.0)style:UITableViewStylePlain];
    _nowShowingTableView.delegate = self;
    _nowShowingTableView.dataSource = self;
    [self.view addSubview:_nowShowingTableView];
    [_nowShowingTableView registerClass:[UITableViewCell class] forCellReuseIdentifier:TableViewControllerCellReuseIdentifier];
    [_nowShowingTableView setSeparatorColor:[UIColor cloudsColor]];
    [_nowShowingTableView setBackgroundView:nil];
    [_nowShowingTableView setBackgroundColor:[UIColor clearColor]];
    [_nowShowingTableView setShowsVerticalScrollIndicator:NO];
    [_nowShowingTableView setSeparatorStyle:UITableViewCellSeparatorStyleSingleLine];
    [_nowShowingTableView setSeparatorColor:[UIColor silverColor]];
}

- (void)prepareData
{
    //channelArr = [NSMutableArray arrayWithArray:[[LibraryAPI sharedInstance]getChannelList]];
    channelArr = [LibraryAPI sharedInstance].channelEditedArr;
    for (ChannelModel *channel in channelArr) {
        if (!linkArr) {
            linkArr = [[NSMutableArray alloc]init];
        }
        NSDictionary *channelDict = @{@"MediaID":[NSNumber numberWithInt:channel.channelID],
                                      @"MediaLink": channel.mediaURL};
        //[NSString stringWithFormat:@"%@",channel.mediaURL];
        [linkArr addObject:channelDict];
    }
}

-(void)loadChannelList
{
    UICollectionViewFlowLayout *flowLayout = [[UICollectionViewFlowLayout alloc]init];
    [flowLayout setScrollDirection:UICollectionViewScrollDirectionVertical];
    [flowLayout setItemSize:CGSizeMake(70.0, 50.0)];
    [flowLayout setSectionInset:UIEdgeInsetsMake(7, 5, 2.5, 5)];
    
    _channelList = [[UICollectionView alloc]initWithFrame:CGRectMake(self.view.bounds.origin.x + 11, self.view.bounds.origin.y, self.view.bounds.size.width - 22, self.view.bounds.size.height - 88.0) collectionViewLayout:flowLayout ];
    [_channelList setBackgroundColor:[UIColor clearColor]];
    [_channelList registerNib:[UINib nibWithNibName:@"cCellIdentifier" bundle:nil] forCellWithReuseIdentifier:@"cCellIdentifier"];
    _channelList.delegate = self;
    _channelList.dataSource = self;
    [_channelList setNeedsLayout];
    [_channelList registerClass:[UICollectionViewCell class] forCellWithReuseIdentifier:@"cCellIdentifier"];
    [_channelList registerClass:[UICollectionReusableView class] forSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"collectionCellHeader"];
    [_channelList setAllowsMultipleSelection:NO];
    [_channelList setShowsVerticalScrollIndicator:NO];
    CATransition *transition = [CATransition animation];
    transition.duration = 2.0;
    transition.type = kCATransitionReveal; //choose your animation
    [_channelList.layer addAnimation:transition forKey:nil];
    [_channelList setBounces:YES];
    
    [self.view addSubview:_channelList];
    
}
- (void)viewWillLayoutSubviews
{
    [super viewWillLayoutSubviews];
    [self.channelList.collectionViewLayout invalidateLayout];
}
-(void)addUnderSeparator : (UIView *)targetView
{
    CGRect separatorFrame = CGRectMake(0, targetView.frame.size.height - 1, targetView.frame.size.width, 1);
    UIView *separatorView = [[UIView alloc]initWithFrame:separatorFrame];
    [separatorView setBackgroundColor:[UIColor tangerineColor]];
    [targetView addSubview:separatorView];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


#pragma mark - UITableViewDataSource

-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [channelArr count];
}

-(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return 0;
}

#pragma mark - UITableViewDelegate

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UIRectCorner corner = 0;
    if (tableView.style == UITableViewStyleGrouped) {
        if ([tableView numberOfRowsInSection:indexPath.section] == 1) {
            corner = UIRectCornerAllCorners;
        }else if (indexPath.row == 0){
            corner = UIRectCornerTopLeft | UIRectCornerTopRight;
        }else if (indexPath.row == [tableView numberOfRowsInSection:indexPath.section] - 1){
            corner = UIRectCornerBottomLeft | UIRectCornerBottomRight;
        }
    }

   // static NSString *cellIdentifier = @"CellIdentifier";
    UITableViewCell *cell = [self.nowShowingTableView dequeueReusableCellWithIdentifier:TableViewControllerCellReuseIdentifier];
    
    if (cell == nil) {
        cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:TableViewControllerCellReuseIdentifier];
    }
    [cell configureFlatCellWithColor:[UIColor whiteColor] selectedColor:[UIColor groupTableViewBackgroundColor] roundingCorners:corner];
  
    
    ChannelModel *channel = channelArr[indexPath.row];
    [[cell.contentView subviews]makeObjectsPerformSelector:@selector(removeFromSuperview)];

    UIImageView *channelImage = [[UIImageView alloc]initWithFrame:CGRectMake(10, 10, 90, 51)];
    [channelImage setImageWithURL:[NSURL URLWithString:channel.mediaThumbnailImage] placeholderImage:[UIImage imageNamed:@"LogoFSO(2).png"]];
    [channelImage.layer setMasksToBounds:NO];
    [channelImage.layer setShadowOffset:CGSizeMake(-3, 10)];
    [channelImage.layer setShadowRadius:5];
    [channelImage.layer setShadowOpacity:0.4];
    [cell.contentView addSubview:channelImage];
    UILabel *channelName = [[UILabel alloc]initWithFrame:CGRectMake(120, 10, cell.contentView.frame.size.width - 110, cell.frame.size.height/2.0)];
    [channelName setText:channel.mediaName];
    [cell.contentView addSubview:channelName];
    UIView *separator = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 5, 91)];
    [separator setBackgroundColor:[self colorFromIndex:indexPath.row]];
    [cell.contentView addSubview:separator];

    return cell;
}


-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return 0;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 91;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [self.nowShowingTableView deselectRowAtIndexPath:indexPath animated:YES];
    ChannelModel *channel = channelArr[indexPath.row];
//    ZPDetailViewController *detailVC = [[ZPDetailViewController alloc]initWithNibName:@"ZPDetailViewController" bundle:nil withURLString:channel.mediaURL];
//    ZPDetailViewController *detailVC = [[ZPDetailViewController alloc]initWithNibName:@"ZPDetailViewController" bundle:nil withLinkArrs:self.linkArr andLink:channel.mediaURL];
    ZPDetailViewController *detailVC = [[ZPDetailViewController alloc] initWithNibName:@"ZPDetailViewController" bundle:nil withChannelArrs:self.channelArr andChannel:channel];
    [self.navigationController pushViewController:detailVC animated:YES];
}

-(void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath
{
    //1. Setup the CATransform3D structure
    CATransform3D rotation;
    rotation = CATransform3DMakeRotation( (90.0*M_PI)/180, 0.0, 0.7, 0.4);
    rotation.m34 = 1.0/ -600;
    
    
    //2. Define the initial state (Before the animation)
    cell.layer.shadowColor = [[UIColor blackColor]CGColor];
    cell.layer.shadowOffset = CGSizeMake(10, 10);
    cell.alpha = 0;
    
    cell.layer.transform = rotation;
    cell.layer.anchorPoint = CGPointMake(0, 0.5);
    
    //!!!FIX for issue #1 Cell position wrong------------
    if(cell.layer.position.x != 0){
        cell.layer.position = CGPointMake(0, cell.layer.position.y);
    }
    
    //4. Define the final state (After the animation) and commit the animation
    [UIView beginAnimations:@"rotation" context:NULL];
    [UIView setAnimationDuration:0.8];
    cell.layer.transform = CATransform3DIdentity;
    cell.alpha = 1;
    cell.layer.shadowOffset = CGSizeMake(0, 0);
    [UIView commitAnimations];
    
}

//Helper function to get a random float
- (float)randomFloatBetween:(float)smallNumber and:(float)bigNumber {
    float diff = bigNumber - smallNumber;
    return (((float) (arc4random() % ((unsigned)RAND_MAX + 1)) / RAND_MAX) * diff) + smallNumber;
}

- (UIColor*)colorFromIndex:(int)index{
    UIColor *color;
    
    //Purple
    if(index % 3 == 0){
        color = [UIColor colorWithRed:0.93 green:0.01 blue:0.55 alpha:1.0];
        //Blue
    }else if(index % 3 == 1){
        color = [UIColor colorWithRed:0.00 green:0.68 blue:0.94 alpha:1.0];
        //Blk
    }else if(index % 3 == 2){
        color = [UIColor blackColor];
    }
    else if(index % 3 == 3){
        color = [UIColor colorWithRed:0.00 green:1.0 blue:0.00 alpha:1.0];
    }
    
    
    return color;
    
}

#pragma mark - UICollectionDataSource

-(NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView
{
    return 1;
}
-(NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    return [channelArr count];
}
#pragma mark - UICollectionViewDelegate

-(UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *cCellIdentifier = @"cCellIdentifier";
    
    UICollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:cCellIdentifier forIndexPath:indexPath];
    
    if (cell == nil) {
        cell = [[UICollectionViewCell alloc]init];
    }
    // image size is 70 x 50
    ChannelModel *channel = channelArr[indexPath.row];
    UIImageView *channelImg = [[UIImageView alloc]init];
    [channelImg setImageWithURL:[NSURL URLWithString:channel.mediaThumbnailImage] placeholderImage:[UIImage imageNamed:@"LogoFSO(2).png"]];
    [cell addSubview: channelImg];
    
   // [cell setBackgroundColor:[UIColor redColor]];
    return cell;
}

-(UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath
{
    UICollectionReusableView *resuableView = nil;
    if (kind == UICollectionElementKindSectionHeader) {
       // UICollectionReusableView *header  = [collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:nil forIndexPath:indexPath];
        resuableView = [collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"collectionCellHeader" forIndexPath:indexPath];
        if (resuableView == nil) {
            resuableView = [[UICollectionReusableView alloc]initWithFrame:CGRectMake(10, 0, 320, 44)];
            
        }
        
        UILabel *headerLbl = [[UILabel alloc]initWithFrame:CGRectMake(0, 0, 320, 44)];
        [headerLbl setText:[NSString stringWithFormat:@"section %i",indexPath.section]];
        [headerLbl setTextAlignment:NSTextAlignmentCenter];
        [headerLbl setTextColor:[UIColor tangerineColor]];
        [resuableView addSubview:headerLbl];
        [self addUnderSeparator:resuableView];
        return resuableView;
    }
    return nil;
}
#pragma mark - UICollectionViewFlowLayout

-(CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout referenceSizeForHeaderInSection:(NSInteger)section
{
    return CGSizeMake(0, 44.0f);
}

#pragma mark - UISegmentControl
- (IBAction)didChangeSegment:(id)sender {
    
    if (_segmentCtrl.selectedSegmentIndex == 0) {
        [_channelList removeFromSuperview];
        [self loadNowShowingList];
    }else if (_segmentCtrl.selectedSegmentIndex == 1) {
        [_nowShowingTableView removeFromSuperview];
        [self loadChannelList];
    }
}


@end
