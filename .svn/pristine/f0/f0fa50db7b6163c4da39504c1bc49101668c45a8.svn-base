//
//  ORGDetailViewController.m
//  Z8Player
//
//  Created by Khanhhoa Mai on 8/8/14.
//  Copyright (c) 2014 FSOFT. All rights reserved.
//

#import "ZPDetailViewController.h"
#import "UIColor+FlatUI.h"
#import "FUISegmentedControl.h"
#import "UIFont+FlatUI.h"

@interface ZPDetailViewController (){
    BOOL isPlaying;
}
@property (strong, nonatomic) IBOutlet UIView *playerView;
@property (weak, nonatomic) IBOutlet UIActivityIndicatorView *activityIndicator;

@property (strong, nonatomic) IBOutlet UIView *playerControlView;
@property (strong, nonatomic) IBOutlet UIButton *playButton;
@property (strong, nonatomic) IBOutlet UISlider *playSlider;
@property (strong, nonatomic) IBOutlet FUISegmentedControl *segmentCtrl;

@property (nonatomic) size_t videoDuration;

@end

@implementation ZPDetailViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    NSString *urlLink = @"rtmp://10.88.107.5/vod/mp4:Cars.2.Air.Mater";
    //@"rtmp://www.planeta-online.tv:1936/live/channel_2"
    // Do any additional setup after loading the view from its nib.
     self.mediaplayer = [[MediaPlayer alloc] initWithURL:urlLink];
  //  [self.view setFrame:]

    //[self.mediaplayer.managerUtility loadingPlayer:self.playerView viewController:self urlLink:urlLink];
//    [self.activityIndicator startAnimating];
   //   [self.mediaplayer.managerUtility playWithURL:urlLink];
    NSLog(@"view did load");
    //segmentControl
    [self setupView];
   // [self.segmentCtrl setTintColor:kColor];
    [self.playButton setImage:[UIImage imageNamed:@"pause.png"] forState:UIControlStateNormal];
    
    isPlaying = YES;
}
-(void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];

    NSString *urlLink = @"rtmp://10.88.107.5/vod/mp4:Cars.2.Air.Mater";
   // self.mediaplayer = [[MediaPlayer alloc] initWithURL:urlLink];
    [self.mediaplayer.managerUtility loadingPlayer:self.playerView viewController:self urlLink:urlLink];
    [self.activityIndicator startAnimating];
    [self.mediaplayer.managerUtility playWithURL:urlLink];
    [self.playSlider setValue:0.0f];
}
-(void)setupView
{
    [self.segmentCtrl setSelectedFont:[UIFont boldFlatFontOfSize:16]];
    [self.segmentCtrl setSelectedFontColor:[UIColor cloudsColor]];
    [self.segmentCtrl setDeselectedFont:[UIFont flatFontOfSize:16]];
    [self.segmentCtrl setDeselectedFontColor:[UIColor cloudsColor]];
    [self.segmentCtrl setSelectedColor:[UIColor turquoiseColor]];
    [self.segmentCtrl setDeselectedColor:[UIColor greenSeaColor]];
    [self.segmentCtrl setDisabledColor:[UIColor silverColor]];
    [self.segmentCtrl setDividerColor:[UIColor silverColor]];
    [self.segmentCtrl setCornerRadius:5.0];
}

-(void)viewDidDisappear:(BOOL)animated
{
    [super viewDidDisappear:animated];
    NSLog(@"Exit");
    [self.mediaplayer.managerUtility stop];
   // [self.navigationController popViewControllerAnimated:YES];

    
}
- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
-(void)openOk{
    NSLog(@"Open ok");


}
-(void)openFailed{
    NSLog(@"Open failed");
}

-(void)readyToPlay{
    NSLog(@"ready to play");
        [self.activityIndicator stopAnimating];
}

-(void)bufferingStart{
    NSLog(@"buffering start");
    [self.view bringSubviewToFront:self.activityIndicator];
    [self.activityIndicator startAnimating];
    
}
- (IBAction)playOrPause:(id)sender {
    if (isPlaying) {
        [self.playButton setImage:[UIImage imageNamed:@"pause.png"] forState:UIControlStateNormal];
        isPlaying = NO;
        [self.mediaplayer.managerUtility pause];
    }else{
        [self.playButton setImage:[UIImage imageNamed:@"play.png"] forState:UIControlStateNormal];
        isPlaying = YES;
        [self.mediaplayer.managerUtility resume];
    }
}
-(void)mediaDuration:(size_t)duration{
    NSLog(@"Duration of film : %zd", duration);
    self.videoDuration = duration;
}

- (void)mediaPosition:(size_t)position{
    NSLog(@"position: %zd", position);
//    CGFloat time_status;
    //    time = (float)position/(float)self.videoDuration;
    
//    time_status = (CGFloat)position/(CGFloat)self.videoDuration;
    
    Float32 percent_status = ((Float32)position/self.videoDuration);
    NSLog(@"time: %f", percent_status);
    [self.playSlider setValue:percent_status];
}

@end
